"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-lp@03bwu&=h77-@49d(#dus!g=ulw*%2t6zl=c9p_rlopq0c--'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []

# ---------------------------------------------------------------------
# HTTPS / Secure Redirects and related security settings
# ---------------------------------------------------------------------

# IMPORTANT: In production DEBUG must be False
DEBUG = False

# Set your real host(s) here -- required when DEBUG = False
ALLOWED_HOSTS = ["yourdomain.com", "www.yourdomain.com", "server-ip-or-hostname"]

# If you're behind a reverse proxy (e.g. nginx) that sets X-Forwarded-Proto,
# tell Django which header to trust. Example below trusts 'https' when proxy sends it.
# Only set this if you actually use a proxy that sets this header.
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# Force all requests to HTTPS by redirecting HTTP -> HTTPS
SECURE_SSL_REDIRECT = True

# HSTS: instruct browsers to access site only over HTTPS for the given time.
# Start with a smaller value while testing (e.g. 3600) then increase to 31536000 once stable.
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True  # include all subdomains in HSTS
SECURE_HSTS_PRELOAD = True  # opt-in to browser preload list (only after verifying site)

# Cookies: ensure cookies are only sent over HTTPS
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Browser protections
SECURE_BROWSER_XSS_FILTER = True  # enables X-XSS-Protection header (where supported)
SECURE_CONTENT_TYPE_NOSNIFF = True  # sets X-Content-Type-Options: nosniff
X_FRAME_OPTIONS = "DENY"  # prevents clickjacking (do not use ALLOW from untrusted sources)

# Additional headers you may want to set via middleware or webserver:
# - Referrer-Policy
# - Permissions-Policy (formerly Feature-Policy)
# - Strict-Transport-Security (already handled via SECURE_HSTS_*)

# -- Content Security Policy (CSP) note --
# Consider using django-csp (pip install django-csp) and add 'csp.middleware.CSPMiddleware'
# to MIDDLEWARE. Example CSP settings (adjust to match your static / external hosts):
# CSP_DEFAULT_SRC = ("'self'",)
# CSP_SCRIPT_SRC = ("'self'", "https://trustedscripts.example.com")
# CSP_STYLE_SRC = ("'self'", "https://fonts.googleapis.com")

# ---------------------------------------------------------------------
# Middleware ordering notes:
# Ensure security-related middleware appears early in MIDDLEWARE.
# Example:
# MIDDLEWARE = [
#     'django.middleware.security.SecurityMiddleware',  # should be first or near top
#     'django.middleware.csrf.CsrfViewMiddleware',
#     'django.contrib.sessions.middleware.SessionMiddleware',
#     # ... other middleware ...
#     'csp.middleware.CSPMiddleware',  # if using django-csp
# ]
# ---------------------------------------------------------------------

# Browser-side protections
SECURE_BROWSER_XSS_FILTER = True
X_FRAME_OPTIONS = "DENY"  # Prevent clickjacking
SECURE_CONTENT_TYPE_NOSNIFF = True

# Enforce HTTPS for cookies
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Recommended additional security headers
SECURE_HSTS_SECONDS = 31536000  # 1 year
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Content Security Policy (Step 4)
CSP_DEFAULT_SRC = ("'self'",)
CSP_STYLE_SRC = ("'self'", "https://fonts.googleapis.com")  # Example
CSP_SCRIPT_SRC = ("'self'", "https://cdn.jsdelivr.net")    # Example

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
    'users',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'csp.middleware.CSPMiddleware',  # For Content Security Policy
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "bookshelf.CustomUser"

LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "list_books"
LOGOUT_REDIRECT_URL = "login"
